version: 2

defaults: &defaults
  working_directory: ~/dd-trace-java
  resource_class: large
  docker:
    - image: circleci/openjdk:8

cache_keys: &cache_keys
  # Reset the cache approx every release
  keys:
    - dd-trace-java-{{ checksum "dd-trace-java.gradle" }}-{{ .Branch }}-{{ .Revision }}
    - dd-trace-java-{{ checksum "dd-trace-java.gradle" }}-{{ .Branch }}
    - dd-trace-java-{{ checksum "dd-trace-java.gradle" }}
    - dd-trace-java


jobs:
  build:
    <<: *defaults
    docker:
      - image: circleci/openjdk:8-jdk

    steps:
      - checkout

      - restore_cache:
          <<: *cache_keys

      - run:
          name: Build Project
          command: GRADLE_OPTS="-Dorg.gradle.jvmargs=-Xmx2G -Xms512M" ./gradlew clean compileTestGroovy compileTestScala compileTestJava check -x test -x testJava7 -x testJava9 -x traceAgentTest -x traceAgentTestJava7 -x traceAgentTestJava9 --parallel --stacktrace --no-daemon --max-workers=6

      - persist_to_workspace:
          root: .
          paths:
            - workspace

      - save_cache:
          key: dd-trace-java-{{ checksum "dd-trace-java.gradle" }}-{{ .Branch }}-{{ .Revision }}
          paths: ~/.gradle
          background: true

  test:
    <<: *defaults
    steps:
      - checkout

      # TODO: Need to install Java 7 and 9.

      - attach_workspace:
          at: .

      - restore_cache:
          <<: *cache_keys

      - run:
          name: Run Tests
          command: GRADLE_OPTS="-Dorg.gradle.jvmargs=-Xmx2G -Xms512M" ./gradlew test -PdisableCompile=true --parallel --stacktrace --no-daemon --max-workers=3

      - run:
          name: Collect Artifacts
          when: always
          command: .circleci/collect_artifacts.sh

      - store_test_results:
          path: ./reports

      - store_artifacts:
          path: ./artifacts

  agent_integration_tests:
    <<: *defaults
    docker:
      - image: circleci/openjdk:8-jdk
      - image: datadog/docker-dd-agent
        env:
          - DD_APM_ENABLED=true
          - DD_BIND_HOST=0.0.0.0
          - DD_API_KEY=invalid_key_but_this_is_fine
    steps:
      - checkout

      - attach_workspace:
          at: .

      - restore_cache:
          # Reset the cache approx every release
          keys:
            - dd-trace-java-{{ checksum "dd-trace-java.gradle" }}-{{ .Branch }}-{{ .Revision }}
            - dd-trace-java-{{ checksum "dd-trace-java.gradle" }}-{{ .Branch }}
            - dd-trace-java-{{ checksum "dd-trace-java.gradle" }}
            - dd-trace-java

      - run:
          name: Run Trace Agent Tests
          command: ./gradlew traceAgentTest --parallel --stacktrace --no-daemon --max-workers=6

      - run:
          name: Collect Artifacts
          when: always
          command: .circleci/collect_artifacts.sh

      - store_test_results:
          path: ./reports

  scan_versions:
    <<: *defaults
    steps:
      - checkout

      - restore_cache:
          # Reset the cache approx every release
          keys:
            - dd-trace-java-version-scan-{{ checksum "dd-trace-java.gradle" }}
            - dd-trace-java-version-scan

      - run:
          name: Verify Version Scan
          command: ./gradlew verifyVersionScan --parallel --stacktrace --no-daemon --max-workers=6

      - run:
          name: Collect Artifacts
          when: always
          command: .circleci/collect_artifacts.sh

      - store_test_results:
          path: ./reports

      - store_artifacts:
          path: ./artifacts

      - save_cache:
          key: dd-trace-java-version-scan-{{ checksum "dd-trace-java.gradle" }}
          paths: ~/.gradle

  publish: &publish
    <<: *defaults
    steps:
      - checkout

      - attach_workspace:
          at: .

      - restore_cache:
          <<: *cache_keys

      - run:
          name: Decode Signing Key
          command: echo $PGP_KEY_FILE | base64 --decode > /home/circleci/dd-trace-java/.circleci/secring.gpg

      - deploy:
          name: Publish master to Artifactory
          command: |
            ./gradlew -Psigning.keyId=${PGP_KEY_ID} \
              -Psigning.password=${PGP_KEY_PASS} \
              -Psigning.secretKeyRingFile=/home/circleci/dd-trace-java/.circleci/secring.gpg \
              -PbintrayUser=${BINTRAY_USER} \
              -PbintrayApiKey=${BINTRAY_API_KEY} \
              -PbuildInfo.build.number=${CIRCLE_BUILD_NUM} \
              artifactoryPublish --max-workers=1 --stacktrace --no-daemon

  publish_master:
    <<: *publish
  publish_tag:
    <<: *publish

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/

      - test:
          requires:
            - build
          filters:
            tags:
              only: /.*/

      - agent_integration_tests:
          requires:
            - build
          filters:
            tags:
              only: /.*/

      - scan_versions:
          requires:
            - build
          filters:
            branches:
              ignore: master

      - publish_master:
          requires:
            - test
            - agent_integration_tests
          filters:
            branches:
              only: master
            tags:
              ignore: /.*/

      - publish_tag:
          requires:
            - test
            - agent_integration_tests
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
